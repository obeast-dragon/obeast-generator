package ${package}.${moduleName}.service.impl;

import com.worldintek.common.domain.PageObjects;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.worldintek.common.utils.PageQueryUtils;

import ${package}.${moduleName}.dao.${className}Dao;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Dao, ${className}Entity> implements ${className}Service {
    @Override
    public PageObjects<${className}Entity> queryPage(Map<String, Object> params) {
        String key = (String) params.get("orderField");
        QueryWrapper<${className}Entity> queryWrapper = new QueryWrapper<${className}Entity>();
        IPage<${className}Entity> page = this.page(
                new PageQueryUtils<EquipEntity>().getPage(params, key, false),
                queryWrapper
        );
        return new PageQueryUtils<>().getPageObjects(page, ${className}Entity.class);
    }


    @Override
    public List<${className}Entity> listByCondition(Map<String, Object> params) {
        return baseDao.selectList(getWrapper(params));
    }

    private QueryWrapper<${className}Entity> getWrapper(Map<String, Object> params){
        QueryWrapper<${className}Entity> queryWrapper = new QueryWrapper<${className}Entity>();
        return queryWrapper;

    }

}
